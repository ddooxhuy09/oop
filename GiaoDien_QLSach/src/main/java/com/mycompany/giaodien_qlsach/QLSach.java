package com.mycompany.giaodien_qlsach;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import java.util.Stack ;
public class QLSach extends javax.swing.JFrame {

    public QLSach() {
        initComponents();
        layThongTinDauSach();
    }

    private void layThongTinDauSach() {
        DefaultTableModel dtm = new DefaultTableModel(new Object[]{"MASACH", "TUASACH", "TACGIA", "NHAXUATBAN"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Ngăn không cho phép chỉnh sửa các ô
            }
        };

        Connection ketNoi = KetNoiCSDL.layKetNoi(); // Getting the connection object from KetNoiCSDL class
        if (ketNoi == null) {
            System.out.println("Không thể kết nối tới cơ sở dữ liệu.");
            return;
        }

        String sql = "SELECT * FROM SACH";
        Vector<Object> vt;

        try (Statement ps = ketNoi.createStatement(); ResultSet rs = ps.executeQuery(sql)) {

            while (rs.next()) {
                vt = new Vector<>();
                vt.add(rs.getString("MASACH"));
                vt.add(rs.getString("TUASACH"));
                vt.add(rs.getString("TACGIA"));
                vt.add(rs.getString("NHAXUATBAN"));
                dtm.addRow(vt);
            }
            jTableSach.setModel(dtm);
        } catch (SQLException ex) {
            System.out.println("Lỗi khi đọc dữ liệu từ bảng Sách");
            ex.printStackTrace();
        } finally {
            try {
                if (ketNoi != null && !ketNoi.isClosed()) {
                    ketNoi.close();
                }
            } catch (SQLException ex) {
                System.out.println("Lỗi khi đóng kết nối");
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTieuDe = new javax.swing.JLabel();
        jLabelThongTin = new javax.swing.JLabel();
        jLabelMaSach = new javax.swing.JLabel();
        jLabelTuaSach = new javax.swing.JLabel();
        jTextFieldMaSach = new javax.swing.JTextField();
        jTextFieldTuaSach = new javax.swing.JTextField();
        jLabelTacGia = new javax.swing.JLabel();
        jLabelNXB = new javax.swing.JLabel();
        jTextFieldTacGia = new javax.swing.JTextField();
        jTextFieldNXB = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButtonThem = new javax.swing.JButton();
        jButtonSua = new javax.swing.JButton();
        jButtonXoa = new javax.swing.JButton();
        jButtonLamLai = new javax.swing.JButton();
        jButtonThoat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSach = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelTieuDe.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelTieuDe.setForeground(new java.awt.Color(0, 0, 255));
        jLabelTieuDe.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTieuDe.setText("DANH SÁCH CÁC ĐẦU SÁCH TRONG THƯ VIỆN");

        jLabelThongTin.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelThongTin.setText("Thông tin");

        jLabelMaSach.setText("Mã Sách");

        jLabelTuaSach.setText("Tựa sách");

        jLabelTacGia.setText("Tác giả");

        jLabelNXB.setText("Nhà Xuất Bản");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Chức năng");

        jButtonThem.setText("Thêm");
        jButtonThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonThemActionPerformed(evt);
            }
        });

        jButtonSua.setText("Sửa");
        jButtonSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSuaActionPerformed(evt);
            }
        });

        jButtonXoa.setText("Xóa");
        jButtonXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonXoaActionPerformed(evt);
            }
        });

        jButtonLamLai.setText("Làm lại");
        jButtonLamLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLamLaiActionPerformed(evt);
            }
        });

        jButtonThoat.setText("Thoát");
        jButtonThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonThoatActionPerformed(evt);
            }
        });

        jTableSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "MÃ SÁCH", "TỰA SÁCH", "TÁC GIẢ", "NHÀ XUẤT BẢN"
            }
        ));
        jScrollPane1.setViewportView(jTableSach);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabelMaSach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelTuaSach, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldMaSach, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                                    .addComponent(jTextFieldTuaSach)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(jButtonThem)
                                .addGap(53, 53, 53)
                                .addComponent(jButtonSua)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabelNXB, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(21, 21, 21))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonXoa)
                                .addGap(53, 53, 53)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonLamLai)
                                .addGap(53, 53, 53)
                                .addComponent(jButtonThoat))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextFieldNXB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                                .addComponent(jTextFieldTacGia, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addGap(0, 56, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTieuDe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelThongTin)
                            .addComponent(jLabelTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabelMaSach)
                                .addComponent(jLabelTacGia))
                            .addComponent(jTextFieldTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jTextFieldMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelTuaSach)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldTuaSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelNXB)
                        .addComponent(jTextFieldNXB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonThem)
                    .addComponent(jButtonSua, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonXoa)
                    .addComponent(jButtonLamLai)
                    .addComponent(jButtonThoat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonThemActionPerformed
        String maSach = jTextFieldMaSach.getText();
        String tuaSach = jTextFieldTuaSach.getText();
        String tacGia = jTextFieldTacGia.getText();
        String nhaXuatBan = jTextFieldNXB.getText();

        if (maSach.isEmpty() || tuaSach.isEmpty() || tacGia.isEmpty() || nhaXuatBan.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Lưu thông tin sách xuống cơ sở dữ liệu 
        luuDauSach(maSach, tuaSach, tacGia, nhaXuatBan);

        // Lấy thông tin sách và hiển thị lên JTable 
        layThongTinDauSach();

    }//GEN-LAST:event_jButtonThemActionPerformed

    private void jButtonSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSuaActionPerformed
        int selectedRow = jTableSach.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để sửa.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String maSachCu = (String) jTableSach.getValueAt(selectedRow, 0);
        String maSachMoi = jTextFieldMaSach.getText().trim();
        String tuaSach = jTextFieldTuaSach.getText().trim();
        String tacGia = jTextFieldTacGia.getText().trim();
        String nhaXuatBan = jTextFieldNXB.getText().trim();

        if (maSachMoi.isEmpty() || tuaSach.isEmpty() || tacGia.isEmpty() || nhaXuatBan.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Sửa thông tin sách trong cơ sở dữ liệu
        suaDauSach(maSachCu, maSachMoi, tuaSach, tacGia, nhaXuatBan);

        // Lấy thông tin sách và hiển thị lại trên JTable
        layThongTinDauSach();
    }//GEN-LAST:event_jButtonSuaActionPerformed

    private void jButtonXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonXoaActionPerformed
        int selectedRow = jTableSach.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để xóa.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String maSach = (String) jTableSach.getValueAt(selectedRow, 0);

        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa thông tin về sách này?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            // Xóa thông tin sách trong cơ sở dữ liệu
            xoaDauSach(maSach);

            // Lấy thông tin sách và hiển thị lại trên JTable
            layThongTinDauSach();
        }
    }//GEN-LAST:event_jButtonXoaActionPerformed

    private void jButtonLamLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLamLaiActionPerformed
        lamLai();
    }//GEN-LAST:event_jButtonLamLaiActionPerformed

    private void jButtonThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonThoatActionPerformed
        thoatChuongTrinh();
    }//GEN-LAST:event_jButtonThoatActionPerformed

    /**
     * @param args the command line arguments
     */
    private void luuDauSach(String maSach, String tuaSach, String tacGia, String nhaXuatBan) {
        saveCurrentState(); // Mã thêm thông tin sách vào cơ sở dữ liệu
        Connection ketNoi = KetNoiCSDL.layKetNoi();
        String sqlCheck = "SELECT COUNT(*) FROM SACH WHERE MASACH = ?";
        String sqlInsert = "INSERT INTO SACH (MASACH, TUASACH, TACGIA, NHAXUATBAN) VALUES (?, ?, ?, ?)";
        
        try {
            // Kiểm tra xem mã sách đã tồn tại chưa
            PreparedStatement psCheck = ketNoi.prepareStatement(sqlCheck);
            psCheck.setString(1, maSach);
            ResultSet rs = psCheck.executeQuery();
            rs.next();
            int count = rs.getInt(1);
            rs.close();
            psCheck.close();

            if (count > 0) {
                JOptionPane.showMessageDialog(this, "Mã sách đã tồn tại. Vui lòng nhập mã sách khác.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Thêm thông tin sách mới
            PreparedStatement ps = ketNoi.prepareStatement(sqlInsert);
            ps.setString(1, maSach);
            ps.setString(2, tuaSach);
            ps.setString(3, tacGia);
            ps.setString(4, nhaXuatBan);
            ps.executeUpdate();
            ps.close();
            ketNoi.close();

            JOptionPane.showMessageDialog(this, "Thêm sách thành công!", "Thành công", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(QLSach.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Lỗi khi thêm thông tin sách");
        }
        
    }

    private void suaDauSach(String maSachCu, String maSachMoi, String tuaSach, String tacGia, String nhaXuatBan) {
        saveCurrentState(); // Mã thêm thông tin sách vào cơ sở dữ liệu
        Connection ketNoi = KetNoiCSDL.layKetNoi();
        String sqlCheck = "SELECT COUNT(*) FROM SACH WHERE MASACH = ? AND MASACH != ?";
        String sqlUpdate = "UPDATE SACH SET MASACH = ?, TUASACH = ?, TACGIA = ?, NHAXUATBAN = ? WHERE MASACH = ?";

        try {
            // Kiểm tra xem mã sách mới đã tồn tại chưa (ngoại trừ mã sách cũ)
            PreparedStatement psCheck = ketNoi.prepareStatement(sqlCheck);
            psCheck.setString(1, maSachMoi);
            psCheck.setString(2, maSachCu);
            ResultSet rs = psCheck.executeQuery();
            rs.next();
            int count = rs.getInt(1);
            rs.close();
            psCheck.close();

            if (count > 0) {
                JOptionPane.showMessageDialog(this, "Mã sách đã tồn tại. Vui lòng nhập mã sách khác.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Cập nhật thông tin sách
            PreparedStatement ps = ketNoi.prepareStatement(sqlUpdate);
            ps.setString(1, maSachMoi);
            ps.setString(2, tuaSach);
            ps.setString(3, tacGia);
            ps.setString(4, nhaXuatBan);
            ps.setString(5, maSachCu);
            ps.executeUpdate();
            ps.close();
            ketNoi.close();

            JOptionPane.showMessageDialog(this, "Sửa thông tin sách thành công!", "Thành công", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(QLSach.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Lỗi khi sửa thông tin sách");
        }
    }
    
    private void xoaDauSach(String maSach) {
        saveCurrentState(); // Mã thêm thông tin sách vào cơ sở dữ liệu
        Connection ketNoi = KetNoiCSDL.layKetNoi();
        String sqlDelete = "DELETE FROM SACH WHERE MASACH = ?";

        try {
            PreparedStatement ps = ketNoi.prepareStatement(sqlDelete);
            ps.setString(1, maSach);
            ps.executeUpdate();
            ps.close();
            ketNoi.close();

            JOptionPane.showMessageDialog(this, "Xóa thông tin sách thành công!", "Thành công", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(QLSach.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Lỗi khi xóa thông tin sách");
        }
    }
    

    private Stack<DefaultTableModel> undoStack = new Stack<>();

    private void lamLai() {
        if (undoStack.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không có thao tác nào để hoàn tác.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        DefaultTableModel previousState = undoStack.pop();
        jTableSach.setModel(previousState);
        JOptionPane.showMessageDialog(this, "Đã hoàn tác thao tác gần nhất.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
    }
    
    private void saveCurrentState() {
        DefaultTableModel currentState = (DefaultTableModel) jTableSach.getModel();
        DefaultTableModel copy = new DefaultTableModel();

        for (int i = 0; i < currentState.getColumnCount(); i++) {
            copy.addColumn(currentState.getColumnName(i));
        }

        for (int i = 0; i < currentState.getRowCount(); i++) {
            Vector<Object> row = new Vector<>();
            for (int j = 0; j < currentState.getColumnCount(); j++) {
                row.add(currentState.getValueAt(i, j));
            }
            copy.addRow(row);
        }

        undoStack.push(copy);
    }
    private void thoatChuongTrinh() {
        int confirm = JOptionPane.showOptionDialog(
                this,
                "Bạn có chắc chắn muốn thoát?",
                "Xác nhận thoát",
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                new Object[]{"Save", "Don't Save", "Cancel"},
                "Save"
        );

        if (confirm == JOptionPane.YES_OPTION) {
            // Lưu thay đổi
            // Thực hiện hành động lưu (nếu có)
            JOptionPane.showMessageDialog(this, "Lưu thay đổi thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            System.exit(0); // Thoát chương trình
        } else if (confirm == JOptionPane.NO_OPTION) {
            // Không lưu thay đổi
            System.exit(0); // Thoát chương trình
        } else if (confirm == JOptionPane.CANCEL_OPTION) {
            // Hủy bỏ hành động thoát
            // Không làm gì cả, chương trình sẽ tiếp tục chạy
        }
    }



    



    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLSach().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLamLai;
    private javax.swing.JButton jButtonSua;
    private javax.swing.JButton jButtonThem;
    private javax.swing.JButton jButtonThoat;
    private javax.swing.JButton jButtonXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelMaSach;
    private javax.swing.JLabel jLabelNXB;
    private javax.swing.JLabel jLabelTacGia;
    private javax.swing.JLabel jLabelThongTin;
    private javax.swing.JLabel jLabelTieuDe;
    private javax.swing.JLabel jLabelTuaSach;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableSach;
    private javax.swing.JTextField jTextFieldMaSach;
    private javax.swing.JTextField jTextFieldNXB;
    private javax.swing.JTextField jTextFieldTacGia;
    private javax.swing.JTextField jTextFieldTuaSach;
    // End of variables declaration//GEN-END:variables
}
